# Path: config/system_config.yml

providers:
  anthropic:
    api_base: "https://api.anthropic.com"
    context_length: 200000
    env_var: "ANTHROPIC_API_KEY"
    default_model: "claude-3-5-sonnet-20241022"
    valid_models:
      - "claude-3-5-sonnet-20241022"
      - "claude-3-5-haiku-20241022"
      - "claude-3-opus-20240229"
      - "claude-3-sonnet-20240229"
      - "claude-3-haiku-20240307"
    litellm_params:
      retry: true
      max_retries: 5
      timeout: 30
      rate_limit_policy:
        tokens: 4000
        requests: 50
        period: 60
      backoff:
        initial_delay: 1
        max_delay: 30
        exponential: true

  openai:
    api_base: "https://api.openai.com/v1"
    env_var: "OPENAI_API_KEY"
    default_model: "gpt-4o"
    valid_models:
      - "gpt-4o"
      - "gpt-4o-mini"
      - "gpt-4"
      - "gpt-4-turbo"
      - "o1"
      - "o1-mini"
      - "o3-mini"
      - "o3-mini-high"
    litellm_params:
      retry: true
      max_retries: 3
      timeout: 30
      rate_limit_policy:
        tokens: 4000
        requests: 200
        period: 60
      backoff:
        initial_delay: 1
        max_delay: 20
        exponential: true

  gemini:
    api_base: "https://generativelanguage.googleapis.com/v1beta"
    context_length: 32000
    env_var: "GEMINI_API_KEY"
    default_model: "gemini-2"
    valid_models:
      - "gemini-1"
      - "gemini-1.5"
      - "gemini-2"

  cohere:
    api_base: "https://api.cohere.ai"
    context_length: 2048
    env_var: "COHERE_API_KEY"
    default_model: "command-xlarge-nightly"
    valid_models:
      - "command-xlarge-nightly"
      - "command-medium-nightly"
      - "generate-xlarge"
      - "generate-medium"
    litellm_params:
      retry: true
      max_retries: 3
      timeout: 30
      rate_limit_policy:
        tokens: 2048
        requests: 100
        period: 60
      backoff:
        initial_delay: 1
        max_delay: 20
        exponential: true

  mistral:
    api_base: "https://api.mistral.ai"
    context_length: 16384
    env_var: "MISTRAL_API_KEY"
    default_model: "mistral-7b-chat"
    valid_models:
      - "mistral-7b"
      - "mistral-7b-chat"
      - "mistral-15b"
    litellm_params:
      retry: true
      max_retries: 3
      timeout: 30
      rate_limit_policy:
        tokens: 16384
        requests: 100
        period: 60
      backoff:
        initial_delay: 1
        max_delay: 20
        exponential: true

  huggingface:
    api_base: "https://api-inference.huggingface.co/models"
    context_length: 1024
    env_var: "HF_API_KEY"
    default_model: "bigscience/bloom"
    valid_models:
      - "bigscience/bloom"
      - "bigscience/bloomz"
      - "meta-llama/Llama-2-70b-chat"
      - "stabilityai/stablelm-tuned-alpha-7b"
    litellm_params:
      retry: true
      max_retries: 3
      timeout: 30
      rate_limit_policy:
        tokens: 1024
        requests: 60
        period: 60
      backoff:
        initial_delay: 1
        max_delay: 20
        exponential: true

  ai21:
    api_base: "https://api.ai21.com/studio/v1"
    context_length: 2048
    env_var: "AI21_API_KEY"
    default_model: "j1-jumbo"
    valid_models:
      - "j1-large"
      - "j1-grande"
      - "j1-jumbo"
    litellm_params:
      retry: true
      max_retries: 3
      timeout: 30
      rate_limit_policy:
        tokens: 2048
        requests: 100
        period: 60
      backoff:
        initial_delay: 1
        max_delay: 20
        exponential: true

llm_config:
  default_provider: "anthropic"
  default_model: "claude-3-opus-20240229"
  agents:
    discovery:
      default_provider: "anthropic"
      default_model: "claude-3-5-sonnet-20241022"  # Fixed hyphenation
      temperature: 0
      tartxt_config:
        # Override the hardcoded src/skills path
        script_base_path: "c4h_agents/skills"  # This gets merged with 'tartxt.py' in the code
        input_paths: ["./"]
        exclusions: ["**/__pycache__/**"]
      prompts:
        system: |
          You are a project discovery agent.
          You analyze project structure and files to understand:
          1. Project organization
          2. File relationships
          3. Code dependencies
          4. Available functionality
    solution_designer:
      provider: "openai"
      model: "o3-mini"
      temperature: 0
      prompts:
        system: |
          You are a code modification solution designer that returns ONLY git-style diffs in JSON format.
          Return ONLY a JSON object with this structure, no other text:
          {
            "changes": [
              {
                "file_path": "path/to/file",
                "type": "create|modify|delete",
                "description": "one line description",
                "diff": "git unified diff"
              }
            ]
          }

          FORMAT REQUIREMENTS FOR EACH TYPE:

          1. NEW FILES (type: "create"):
          --- /dev/null
          +++ b/new_file.py
          @@ -0,0 +1,3 @@
          +new content here

          2. DELETE FILES (type: "delete"):
          --- a/old_file.py
          +++ /dev/null
          @@ -1,3 +0,0 @@
          -content to remove

          3. MODIFY FILES (type: "modify"):
          --- a/existing_file.py
          +++ b/existing_file.py
          @@ -1,3 +1,4 @@
           context line
          -removed line
          +added line
           context line

          RULES:
          - Use /dev/null for create/delete operations
          - Include 3 lines of context for modifications
          - Group related changes into chunks with @@ markers
          - Include imports in first chunk if needed, make sure to include imports for new code
          - Return ONLY the JSON object, no explanations
          - Ensure all paths use forward slashes
          - Keep descriptions short and clear

        solution: |
          Source Code:
          {source_code}

          Intent:
          {intent}

          Return only the content without any markup or explanations.
          IMPORTANT do NOT give any other information, only the asked for content
          IF you provide any other information, you will break the processing pipeline

    semantic_extract:
      provider: "anthropic"
      model: "claude-3-opus-20240229"
      temperature: 0
      prompts:
        system: |
          You are a precise information extractor.
          When given content and instructions:
          1. Follow the instructions exactly as given
          2. Extract ONLY the specific information requested
          3. Return in exactly the format specified
          4. Do not add explanations or extra content
          5. Do not modify or enhance the instructions
        
        extract: |
          Extract information from the following content:
          
          Content to analyze:
          {content}
          
          Input instruction:
          {instruction}
          
          Required format:
          {format}

    semantic_iterator:
      prompts:
        system: |
          You are a semantic extraction coordinator. 
          You use fast extraction for structured content and fall back to slow extraction when needed.
          Your task is to coordinate extraction using the right mode while maintaining result consistency.
          Never modify the extraction instructions or format requirements from the caller.
          Do not add any processing or validation beyond what is specifically requested.

    semantic_fast_extractor:
      provider: "anthropic"
      model: "claude-3-5-sonnet-20241022"
      temperature: 0
      prompts:
        system: |
          You are a precise bulk extraction agent for information objects.
          Your role is to extract information objects from any format into a consistent structure.
          Rules:
          1. Follow the extraction instruction exactly
          2. Return ONLY raw JSON - no markdown, no code blocks, no backticks
          3. Each change must include file_path, type, and either content or diff
          4. Never include explanatory text or formatting markers
          5. Extract all changes in a single pass
          6. Response must start with [ and end with ]
          7. Every string must use double quotes
          8. No comments or trailing commas allowed, or markdown formatting

        extract: |
          Extract all information objects from the input, regardless of format.
          
          Content to analyze:
          {content}

          Each change action must include:
          1. file_path: Path of the file to modify (if available)
          2. type: One of "modify", "create", or "delete"
          3. content: The complete new content (if available)
          4. diff: Git-style diff (if content not available)
          5. description: Clear description of the change

          Input instruction:
          {instruction}

          Required format:
          {format}

          CRITICAL: Return raw JSON only. Do not wrap in code blocks or markdown.

    semantic_slow_extractor:
      provider: "anthropic"
      model: "claude-3-5-sonnet-20241022"
      temperature: 0
      prompts:
        system: |
          You are a precise sequential extraction agent for extracting object of information.
          Your role is to extract exactly one object of information as described what a block is,
          at position N, or signal completion.
          Rules:
          1. Extract ONLY the Nth object that hasn't been returned before
          2. Return NO_MORE_ITEMS if:
            - No more unprocessed blocks exist
            - Current position exceeds available blocks
            - objects at current position was previously returned
          3. Each object MUST be unique 
          4. Follow exact format for single object response
          5. Maintain strict sequential order of original object
        extract: |
          Extract the {ordinal} object from the input.
          
          Content to analyze:
          {content}
          
          Extract as a single object if the information exists, otherwise blank:
          1. file_path: Path of the file to modify
          2. type: One of "modify", "create", or "delete"  
          3. content: The complete new content (if available)
          4. diff: Git-style diff (if content not available)
          5. description: Clear description of the change
          
          Input instruction:
          {instruction}
          
          Required format:
          {format}
          
          CRITICAL RULES:
          1. Extract EXACTLY the {ordinal} object in sequence order
          2. Return NO_MORE_ITEMS if:
            - {ordinal} exceeds number of objects
            - Object at {ordinal} was already returned in previous position
          3. Return single change object, not an array
          4. No explanations or headers allowed or conversational text

    semantic_merge:
      provider: "anthropic"
      model: "claude-3-5-sonnet-20241022"
      temperature: 0
      merge_config:
        preserve_formatting: true
        allow_partial: false
      prompts:
        system: |
          You are a precise code merger that transforms git-style unified diffs into complete, runnable file contents. Your task is to apply the diff to the original code accurately, preserving its structure, formatting, and functionality.

          CRITICAL REQUIREMENTS:
          1. Input Expectations:
            - You will receive:
              - Original code ("original" in context)
              - Unified git-style diff ("diff" in context)
            - If either is missing, return the error: "Missing required [original|diff] content".

          2. Diff Application Rules:
            - Parse the @@ markers to determine exact positions of changes.
            - Verify that context lines in the diff match the original code.
            - Modify only the lines specified in the diff and leave all other lines untouched.
            - Maintain original indentation, whitespace, comments, docstrings, imports, and overall structure.

          3. Validation Checks:
            - Ensure @@ line numbers align with the original code.
            - Verify that all context lines exist in the original file.
            - Ensure no unintended code is added or removed.
            - Retain all class and function structures, import order, and grouping.

          4. Output Format:
            - Return ONLY the complete, modified file content.
            - Start with the original file docstring.
            - End with the last line of actual code.
            - Never include:
              * File boundary markers (---, ===, etc)
              * End-of-file comments or markers
              * Documentation separators
              * Markdown formatting (```, etc)
              * Conversation markers or explanations
            - Ensure the output is valid and executable code.

          5. File Content Rules:
            - Never append duplicate methods
            - Never add content after last code line
            - Never include file separator comments
            - Never add markdown or documentation markers
            - Preserve exact original whitespace patterns
            - Maintain original method ordering

          REMINDER:
          Your role is strictly to apply the changes defined in the diff. Any deviation from the original code not specified in the diff is an error.

        merge: |
          You will receive a git-style unified diff representing code changes.
          Your task is to apply these changes to the provided original code and return the COMPLETE modified file content.

          REQUIREMENTS:
          ======================================================================
          1. Original Code Context:
            {original}

          ======================================================================
          2. Diff Patch to Apply:
            {diff}

          ======================================================================
          3. Preservation Rules:
            - Keep original code structure intact.
            - Apply all modifications from the diff.
            - Maintain existing imports, comments, and docstrings.
            - Preserve original functionality.
            - Keep original whitespace patterns.
            - Maintain exact method ordering.

          CRITICAL OUTPUT INSTRUCTIONS:
            - Return ONLY the complete modified file content.
            - Start with original file docstring.
            - End with last line of actual code.
            - NO file boundary markers.
            - NO end-of-file comments.
            - NO markdown formatting.
            - NO documentation separators.
            - NO conversation text or explanations.
            - Output must be valid Python that could be directly saved to a .py file.

          Any non-code content will break the processing pipeline.

    coder:
      provider: "anthropic"
      model: "claude-3-opus-20240229"
      temperature: 0
      prompts:
        system: |
          You are an expert code modification agent. Your task is to safely and precisely apply code changes.
          You receive changes in this exact JSON structure:
          {
            "changes": [
              {
                "file_path": "exact path to file",
                "type": "modify",
                "description": "change description",
                "content": "complete file content"
              }
            ]
          }

          Rules:
          1. Always expect input in the above JSON format
          2. If input is a string, parse it as JSON first
          3. Preserve existing functionality unless explicitly told to change it
          4. Maintain code style and formatting
          5. Apply changes exactly as specified
          6. Handle errors gracefully with backups
          7. Validate code after changes
    
    assurance:
      provider: "openai"
      model: "gpt-4-0125-preview"
      temperature: 0
      prompts:
        system: |
          You are a validation expert that analyzes test results.
          When given test output:
          1. Extract key success/failure indicators
          2. Identify specific test failures
          3. Extract relevant error messages
          4. Determine overall validation status
          5. Provide clear validation summary

logging:
  level: "debug"  
  format: "structured"
  agent_level: "debug"  
  providers:
    anthropic:
      level: "debug"
    openai:
      level: "debug"