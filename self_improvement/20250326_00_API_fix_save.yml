# C4H Editor - Frontend API Integration Enhancements (Phase 1)

# Project settings
project:
  path: "/Users/jim/src/apps/c4h_editor/"
  workspace_root: "workspaces"

# Fix C4H Editor Type Mismatch and API Validation Issues

intent:
  description: |
      Fix all remaining type mismatches in configTypes.ts, particularly in the workflow section (lines 173-180).
      Previous fixes addressed other sections but missed the workflow config type.
      
      ## Current Architecture
      - ConfigTypeMetadata interface defines endpoint properties as strings (not functions)
      - A formatEndpoint helper method has been added to apiService.ts to handle {id} substitution
      - Most config types have been converted but workflow section still uses function endpoints
      
      ## Error Pattern
      Every endpoint property in workflow section generates:
      "Type '(id: string) => string' is not assignable to type 'string'" errors

      ## Required Solution Pattern
      1. Convert each function endpoint to a string template with {id} placeholders
      2. Ensure apiService can resolve these placeholders using the formatEndpoint helper
      3. Ensure all properties required by ConfigTypeMetadata are present

      tasks:
        - Update ALL endpoint methods in workflow section to string templates
        - Follow exact same pattern implemented for workorder, teamconfig, and runtimeconfig
        - Verify the workflow section has requiredForJob property set
        - Check for any other configType implementations that might have been missed
        - Ensure consistent naming pattern across all sections
        - Verify the defaultContent structure is appropriate for workflow type

      examples:
        - Change: `get: (id) => \`/api/v1/configs/workflow/${id}\`` → `get: "/api/v1/configs/workflow/{id}"`
        - Change: `archive: (id) => \`/api/v1/configs/workflow/${id}/archive\`` → `archive: "/api/v1/configs/workflow/{id}/archive"`
        - Complete template:
          ```typescript
          apiEndpoints: {
            list: "/api/v1/configs/workflow",
            get: "/api/v1/configs/workflow/{id}",
            create: "/api/v1/configs/workflow",
            update: "/api/v1/configs/workflow/{id}",
            delete: "/api/v1/configs/workflow/{id}",
            archive: "/api/v1/configs/workflow/{id}/archive",
            unarchive: "/api/v1/configs/workflow/{id}/unarchive",
            clone: "/api/v1/configs/workflow/{id}/clone",
            history: "/api/v1/configs/workflow/{id}/history"
          }
        ```

# LLM configuration
llm_config:
  default_provider: "anthropic"
  default_model: "claude-3-7-sonnet-20250219"
  
  agents:
    discovery:
      provider: "anthropic"
      model: "claude-3-5-sonnet-20241022"
      tartxt_config:
        input_paths:
          - "c4h-micro/packages/"
          - "backend/c4h_config_api.md"
          - "/Users/jim/src/apps/c4h_projects/docs/design_docs/Typescript_Design_Principles.md"
        exclusions:
          - "**/node_modules/**"
          - "**/.git/**"
          - "**/__pycache__/**"
          - "**/*.pyc"
          - "**/package-lock.json"
          - "**/dist/**"

# Runtime configuration
runtime:
  workflow:
    storage:
      enabled: true
      root_dir: "workspaces/workflows"
      format: "yymmdd_hhmm_{workflow_id}"
    error_handling:
      ignore_storage_errors: true
      log_level: "ERROR"

# Backup configuration
backup:
  enabled: true
  path: "workspaces/backups"

# Logging configuration
logging:
  level: "INFO"
  format: "structured"
  agent_level: "DEBUG"
  truncate:
    prefix_length: 30
    suffix_length: 30