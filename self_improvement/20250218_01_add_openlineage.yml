# Path: c4h_services/examples/config/workflow_openlineage.yml

project:
  path: "/Users/jim/src/apps/c4h_ai_dev"  
  workspace_root: "workspaces"

intent:
  description: |
    Integrate lineage tracking in BaseAgent by initializing and using the existing BaseLineage implementation.
    
    Problem: BaseAgent isn't creating lineage events despite having the BaseLineage class available.
    
    Specific Changes Required:
    
    1. In BaseAgent.__init__, add lineage initialization:
    ```python
    # Initialize lineage tracking if enabled
    lineage_config = config.get('runtime', {}).get('lineage', {})
    if lineage_config.get('enabled', False):
        self.lineage = BaseLineage(
            namespace=self.project.metadata.name if self.project else 'default',
            agent_name=self._get_agent_name(),
            config=config
        )
    else:
        self.lineage = None
    ```
    
    2. In BaseAgent's _process method, add tracking after LLM completion:
    ```python
    # After getting content and raw_response from _get_completion_with_continuation:
    
    # Track lineage if enabled
    if self.lineage:
        self.lineage.track_llm_interaction(
            context=enhanced_context,
            messages=messages,
            response=raw_response,
            metrics={"token_usage": getattr(raw_response, 'usage', {})}
        )
    ```
    
    3. Add proper imports in BaseAgent:
    ```python
    from .base_lineage import BaseLineage
    ```
    
    4. Log lineage initialization:
    ```python
    logger.info(f"{self._get_agent_name()}.initialized", 
               continuation_settings={
                   "max_attempts": self.max_continuation_attempts,
                   "token_buffer": self.continuation_token_buffer
               },
               lineage_enabled=lineage_config.get('enabled', False),
               **log_context)
    ```
    
    5. Update system_config.yml to include lineage configuration:
    ```yaml
    runtime:
      lineage:
        enabled: true
        backend:
          type: "file"
          path: "workspaces/lineage"
        error_handling:
          ignore_failures: true
          log_level: "ERROR"
    ```
    
    Implementation Requirements:
    
    1. Follow Agent Design Principles:
       - Single Responsibility: Keep lineage handling isolated from core logic
       - Minimal Change: Only add initialization and one tracking call
       - Observable Behavior: Log lineage initialization status
       - No Backward Compatibility Breaks
    
    2. Performance considerations:
       - Don't impact critical path with lineage errors
       - Use error handling in BaseLineage to isolate failures

llm_config:
  agents:
    discovery:
      tartxt_config:
        script_path: "/Users/jim/src/apps/c4h_ai_dev/c4h_agents/skills/tartxt.py"
        input_paths: 
          - "c4h_services"
          - "c4h_agents"
          - "docs/Agent_Design_Principles.md"
        exclusions: 
          - "**/__pycache__/**"
          - "**/.git/**"
          - "**/*.pyc"
        output_type: "stdout"

    solution_designer:
      provider: "anthropic"
      model: "claude-3-5-sonnet-20241022"
      temperature: 0

    coder:
      provider: "anthropic"
      model: "claude-3-5-sonnet-20241022"
      temperature: 0
      backup_enabled: true
    semantic_iterator:
      temperature: 0
      extractor_config:
        mode: "fast"
        allow_fallback: true        

runtime:
  workflow:
    storage:
      enabled: true
      root_dir: "workspaces/workflows"
      format: "yymmdd_hhmm_{workflow_id}"
      retention:
        max_runs: 10
        max_days: 30
      subdirs:
        - "events"
        - "config"
      error_handling:
        ignore_storage_errors: true
        log_level: "ERROR"
    retry:
      enabled: true
      max_attempts: 3
      initial_delay: 1
      max_delay: 30
      backoff_factor: 2
      retry_on:
        - "overloaded_error"
        - "rate_limit_error"
        - "timeout_error"
  lineage:
    enabled: true
    backend:
      type: "file"
      path: "workspaces/lineage"
    error_handling:
      ignore_failures: true
      log_level: "ERROR"

logging:
  level: "INFO"
  format: "structured"
  agent_level: "DEBUG"